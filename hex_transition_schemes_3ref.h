/********************************************************************************
*  This file is part of CinoLib                                                 *
*  Copyright(C) 2016: Marco Livesu                                              *
*                                                                               *
*  The MIT License                                                              *
*                                                                               *
*  Permission is hereby granted, free of charge, to any person obtaining a      *
*  copy of this software and associated documentation files (the "Software"),   *
*  to deal in the Software without restriction, including without limitation    *
*  the rights to use, copy, modify, merge, publish, distribute, sublicense,     *
*  and/or sell copies of the Software, and to permit persons to whom the        *
*  Software is furnished to do so, subject to the following conditions:         *
*                                                                               *
*  The above copyright notice and this permission notice shall be included in   *
*  all copies or substantial portions of the Software.                          *
*                                                                               *
*  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR   *
*  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,     *
*  FITNESS FOR A PARTICULAR PURPOSE AND NON INFRINGEMENT. IN NO EVENT SHALL THE *
*  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER       *
*  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING      *
*  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS *
*  IN THE SOFTWARE.                                                             *
*                                                                               *
*  Author(s):                                                                   *
*                                                                               *
*     Daniele Ortu                                                              *
*********************************************************************************/

#ifndef HEX_TRANSITION_SCHEMES_3REF_H
#define HEX_TRANSITION_SCHEMES_3REF_H

#include <vector>
#include <sys/types.h>

/* Implementation of the convertion schemes to transform an adaptively refined grid
 * with hanging nodes into a conforming all hexahedral mesh using a 3-refinement approach.
 *
 * Schemes are defined in the primal (grid) mesh, and are meant to regularize the
 * valence of hanging nodes.
 *
 * The templates are:
 * 1. NODE
 * 2. EDGE
 * 3. FACE
 * 4. FULL
 * 5. TWO_EDGES
 * 6. TWO_FACES
 * 7. CORNER_4B
 * 8. CORNER_4CA
 * 9. CORNER_4CB
 * 10. CORNER_5A
 * 11. CORNER_7A
 *
 * For each scheme we hard coded vertices, faces and cells of the polyhedral mesh.
 * Each mesh is a 1x1x1 cube, and the vertex with id 0 is always the "application point",
 * that is, the vertex that must be used for positioning the scheme in the grid.
 *
 * USAGE: Schemes are meant to be used as follows:
 *
 *  1 - locate type, size, and application point of the scheme in the adaptive grid
 *
 *  2 - position the scheme in your grid
 *
 *  3 - remove the standard grid element from your grid, substituting it with the
 *      scheme, also merging merging coincident vertices to topologically weld the
 *      two meshes
 *
 *
 * Steps (2,3) can be done with cinolib::hex_transition_install_3ref.
 *
 * Hex_transition_install_3ref must be executed since all the hanging nodes are solved
 */

namespace cinolib{

//:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
namespace Node{

    static const std::vector<double> verts = {
               0 ,          0 ,          0 ,
               1 ,          0 ,          0 ,
               0 ,          1 ,          0 ,
               1 ,          1 ,          0 ,
               0 ,          0 , 0.66666667 ,
      0.33333333 ,          0 , 0.66666667 ,
               0 , 0.33333333 , 0.66666667 ,
      0.33333333 , 0.33333333 , 0.66666667 ,
               0 ,          0 ,          1 ,
      0.33333333 ,          0 ,          1 ,
               0 , 0.33333333 ,          1 ,
               1 ,          0 ,          1 ,
               0 ,          1 ,          1 ,
               1 ,          1 ,          1 ,
    };

    static const std::vector<std::vector<uint>> polys = {
         {  8,  9,  5,  4, 10, 11,  7,  6},
         {  4,  5,  1,  0,  6,  7,  3,  2},
         { 10, 11,  7,  6, 13, 14,  3,  2},
         {  9, 12,  1,  5, 11, 14,  3,  7},
    };

}


//:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
namespace Edge{

    static const std::vector<double> verts = {
               0 ,          0 ,          0 ,
               1 ,          0 ,          0 ,
               0 ,          1 ,          0 ,
               1 ,          1 ,          0 ,
               0 ,          0 , 0.33333333 ,
      0.66666667 ,          0 , 0.33333333 ,
               0 , 0.66666667 , 0.33333333 ,
      0.66666667 , 0.66666667 , 0.33333333 ,
               0 ,          0 , 0.66666667 ,
      0.66666667 ,          0 , 0.66666667 ,
               0 , 0.66666667 , 0.66666667 ,
      0.66666667 , 0.66666667 , 0.66666667 ,
               0 ,          0 ,          1 ,
               1 ,          0 ,          1 ,
               0 ,          1 ,          1 ,
               1 ,          1 ,          1 ,
    };

    static const std::vector<std::vector<uint>> polys = {
         {  4,  5,  1,  0,  6,  7,  3,  2},
         {  8,  9,  5,  4, 10, 11,  7,  6},
         { 10, 11,  7,  6, 14, 15,  3,  2},
         { 12, 13,  9,  8, 14, 15, 11, 10},
         {  9, 13,  1,  5, 11, 15,  3,  7},
    };

}


//:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
namespace Face{

    static const std::vector<double> verts = {
               0 ,          0 ,          0 ,
      0.33333333 ,          0 ,          0 ,
      0.66666667 ,          0 ,          0 ,
               1 ,          0 ,          0 ,
      0.33333333 , 0.66666667 ,          0 ,
      0.66666667 , 0.66666667 ,          0 ,
               0 ,          1 ,          0 ,
               1 ,          1 ,          0 ,
               0 ,          0 , 0.33333333 ,
      0.33333333 ,          0 , 0.33333333 ,
      0.66666667 ,          0 , 0.33333333 ,
               1 ,          0 , 0.33333333 ,
      0.33333333 , 0.33333333 , 0.33333333 ,
      0.66666667 , 0.33333333 , 0.33333333 ,
               0 , 0.66666667 , 0.33333333 ,
               1 , 0.66666667 , 0.33333333 ,
               0 ,          0 , 0.66666667 ,
      0.33333333 ,          0 , 0.66666667 ,
      0.66666667 ,          0 , 0.66666667 ,
               1 ,          0 , 0.66666667 ,
      0.33333333 , 0.33333333 , 0.66666667 ,
      0.66666667 , 0.33333333 , 0.66666667 ,
               0 , 0.66666667 , 0.66666667 ,
               1 , 0.66666667 , 0.66666667 ,
               0 ,          0 ,          1 ,
      0.33333333 ,          0 ,          1 ,
      0.66666667 ,          0 ,          1 ,
               1 ,          0 ,          1 ,
      0.33333333 , 0.66666667 ,          1 ,
      0.66666667 , 0.66666667 ,          1 ,
               0 ,          1 ,          1 ,
               1 ,          1 ,          1 ,
    };

    static const std::vector<std::vector<uint>> polys = {
        {  9, 10,  2,  1, 12, 13,  5,  4},
        { 17, 18, 10,  9, 20, 21, 13, 12},
        { 25, 26, 18, 17, 28, 29, 21, 20},
        { 20, 21, 13, 12, 28, 29,  5,  4},
        { 16, 17,  9,  8, 22, 20, 12, 14},
        { 24, 25, 17, 16, 30, 28, 20, 22},
        { 18, 19, 11, 10, 21, 23, 15, 13},
        { 26, 27, 19, 18, 29, 31, 23, 21},
        {  8,  9,  1,  0, 14, 12,  4,  6},
        { 10, 11,  3,  2, 13, 15,  7,  5},
        { 21, 23, 15, 13, 29, 31,  7,  5},
        { 22, 20, 12, 14, 30, 28,  4,  6},
        { 28, 29,  5,  4, 30, 31,  7,  6},
    };

}


//:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
namespace Full{

    static const std::vector<double> verts = {
               0 ,          0 ,          0 ,
      0.33333333 ,          0 ,          0 ,
      0.66666667 ,          0 ,          0 ,
               1 ,          0 ,          0 ,
               0 , 0.33333333 ,          0 ,
      0.33333333 , 0.33333333 ,          0 ,
      0.66666667 , 0.33333333 ,          0 ,
               1 , 0.33333333 ,          0 ,
               0 , 0.66666667 ,          0 ,
      0.33333333 , 0.66666667 ,          0 ,
      0.66666667 , 0.66666667 ,          0 ,
               1 , 0.66666667 ,          0 ,
               0 ,          1 ,          0 ,
      0.33333333 ,          1 ,          0 ,
      0.66666667 ,          1 ,          0 ,
               1 ,          1 ,          0 ,
               0 ,          0 , 0.33333333 ,
      0.33333333 ,          0 , 0.33333333 ,
      0.66666667 ,          0 , 0.33333333 ,
               1 ,          0 , 0.33333333 ,
               0 , 0.33333333 , 0.33333333 ,
      0.33333333 , 0.33333333 , 0.33333333 ,
      0.66666667 , 0.33333333 , 0.33333333 ,
               1 , 0.33333333 , 0.33333333 ,
               0 , 0.66666667 , 0.33333333 ,
      0.33333333 , 0.66666667 , 0.33333333 ,
      0.66666667 , 0.66666667 , 0.33333333 ,
               1 , 0.66666667 , 0.33333333 ,
               0 ,          1 , 0.33333333 ,
      0.33333333 ,          1 , 0.33333333 ,
      0.66666667 ,          1 , 0.33333333 ,
               1 ,          1 , 0.33333333 ,
               0 ,          0 , 0.66666667 ,
      0.33333333 ,          0 , 0.66666667 ,
      0.66666667 ,          0 , 0.66666667 ,
               1 ,          0 , 0.66666667 ,
               0 , 0.33333333 , 0.66666667 ,
      0.33333333 , 0.33333333 , 0.66666667 ,
      0.66666667 , 0.33333333 , 0.66666667 ,
               1 , 0.33333333 , 0.66666667 ,
               0 , 0.66666667 , 0.66666667 ,
      0.33333333 , 0.66666667 , 0.66666667 ,
      0.66666667 , 0.66666667 , 0.66666667 ,
               1 , 0.66666667 , 0.66666667 ,
               0 ,          1 , 0.66666667 ,
      0.33333333 ,          1 , 0.66666667 ,
      0.66666667 ,          1 , 0.66666667 ,
               1 ,          1 , 0.66666667 ,
               0 ,          0 ,          1 ,
      0.33333333 ,          0 ,          1 ,
      0.66666667 ,          0 ,          1 ,
               1 ,          0 ,          1 ,
               0 , 0.33333333 ,          1 ,
      0.33333333 , 0.33333333 ,          1 ,
      0.66666667 , 0.33333333 ,          1 ,
               1 , 0.33333333 ,          1 ,
               0 , 0.66666667 ,          1 ,
      0.33333333 , 0.66666667 ,          1 ,
      0.66666667 , 0.66666667 ,          1 ,
               1 , 0.66666667 ,          1 ,
               0 ,          1 ,          1 ,
      0.33333333 ,          1 ,          1 ,
      0.66666667 ,          1 ,          1 ,
               1 ,          1 ,          1 ,
    };


    static const std::vector<std::vector<uint>> polys = {
        { 16, 17,  1,  0, 20, 21,  5,  4},
        { 17, 18,  2,  1, 21, 22,  6,  5},
        { 18, 19,  3,  2, 22, 23,  7,  6},
        { 20, 21,  5,  4, 24, 25,  9,  8},
        { 21, 22,  6,  5, 25, 26, 10,  9},
        { 22, 23,  7,  6, 26, 27, 11, 10},
        { 24, 25,  9,  8, 28, 29, 13, 12},
        { 25, 26, 10,  9, 29, 30, 14, 13},
        { 26, 27, 11, 10, 30, 31, 15, 14},
        { 32, 33, 17, 16, 36, 37, 21, 20},
        { 33, 34, 18, 17, 37, 38, 22, 21},
        { 34, 35, 19, 18, 38, 39, 23, 22},
        { 36, 37, 21, 20, 40, 41, 25, 24},
        { 37, 38, 22, 21, 41, 42, 26, 25},
        { 38, 39, 23, 22, 42, 43, 27, 26},
        { 40, 41, 25, 24, 44, 45, 29, 28},
        { 41, 42, 26, 25, 45, 46, 30, 29},
        { 42, 43, 27, 26, 46, 47, 31, 30},
        { 48, 49, 33, 32, 52, 53, 37, 36},
        { 49, 50, 34, 33, 53, 54, 38, 37},
        { 50, 51, 35, 34, 54, 55, 39, 38},
        { 52, 53, 37, 36, 56, 57, 41, 40},
        { 53, 54, 38, 37, 57, 58, 42, 41},
        { 54, 55, 39, 38, 58, 59, 43, 42},
        { 56, 57, 41, 40, 60, 61, 45, 44},
        { 57, 58, 42, 41, 61, 62, 46, 45},
        { 58, 59, 43, 42, 62, 63, 47, 46},
    };
}


//:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
namespace Two_Edges{

    static const std::vector<double> verts = {
               0 ,          0 ,          0 ,
               1 ,          0 ,          0 ,
               0 ,          1 ,          0 ,
               1 ,          1 ,          0 ,
               0 ,          0 , 0.33333333 , //e1
      0.33333333 ,          0 , 0.33333333 , //e1
             0.5 ,          0 ,        0.3 ,
             0.7 ,          0 ,        0.3 ,
               0 , 0.66666667 , 0.33333333 , //e1
      0.33333333 ,        0.6 , 0.33333333 , //e1
             0.5 , 0.66666667 ,        0.3 ,
             0.7 , 0.66666667 ,        0.3 ,
               0 ,          0 , 0.66666667 , //e1
      0.33333333 ,          0 , 0.48333333 , //e1
             0.5 ,          0 ,        0.5 ,
             0.7 ,          0 ,        0.5 ,
               0 , 0.66666667 , 0.66666667 , //e1
      0.33333333 ,        0.6 , 0.48333333 , //e1
             0.5 , 0.66666667 ,        0.5 ,
             0.7 , 0.66666667 ,        0.5 ,
      0.51666667 ,          0 , 0.66666667 , //e2
      0.66666667 ,          0 , 0.66666667 , //e2
      0.51666667 ,        0.6 , 0.66666667 , //e2
      0.66666667 ,        0.6 , 0.66666667 , //e2
      0.33333333 ,          0 ,          1 , //e2
      0.66666667 ,          0 ,          1 , //e2
      0.33333333 , 0.66666667 ,          1 , //e2
      0.66666667 , 0.66666667 ,          1 , //e2
               0 ,          0 ,          1 ,
               1 ,          0 ,          1 ,
               0 ,          1 ,          1 ,
               1 ,          1 ,          1 ,
    };

    static const std::vector<std::vector<uint>> polys = {
        {  6,  7,  1,  0, 10, 11,  3,  2},
        { 14, 15,  7,  6, 18, 19, 11, 10},
        { 18, 19, 11, 10, 30, 31,  3,  2},
        { 15, 29,  1,  7, 19, 31,  3, 11},
        { 12, 13,  5,  4, 16, 17,  9,  8}, //edge 1-2
        { 28, 14, 13, 12, 30, 18, 17, 16}, //edge 1-2
        { 13, 14,  6,  5, 17, 18, 10,  9}, //edge 1-2
        {  4,  5,  6,  0,  8,  9, 10,  2}, //edge 1-2
        { 16, 17,  9,  8, 30, 18, 10,  2}, //edge 1-2
        { 24, 25, 21, 20, 26, 27, 23, 22}, //edge 1-4
        { 20, 21, 15, 14, 22, 23, 19, 18}, //edge 1-4
        { 26, 27, 23, 22, 30, 31, 19, 18}, //edge 1-4
        { 25, 29, 15, 21, 27, 31, 19, 23}, //edge 1-4
        { 28, 24, 20, 14, 30, 26, 22, 18}, //edge 1-4
    };

}


//:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
namespace Two_Faces{

    static const std::vector<double> verts = {
               0 ,          0 ,          0 ,
               1 ,          0 ,          0 ,
               0 ,          1 ,          0 ,
               1 ,          1 ,          0 ,
             0.5 ,          0 ,        0.3 ,
             0.7 ,          0 ,        0.3 ,
             0.5 ,          1 ,        0.3 ,
             0.7 ,          1 ,        0.3 ,
             0.5 ,          0 ,        0.5 ,
             0.7 ,          0 ,        0.5 ,
             0.5 ,          1 ,        0.5 ,
             0.7 ,          1 ,        0.5 ,
               0 ,          0 ,          1 ,
               1 ,          0 ,          1 ,
               0 ,          1 ,          1 ,
               1 ,          1 ,          1 ,
               0 , 0.33333333 ,          0 , //e1
      0.66666667 , 0.33333333 ,          0 , //e1
               0 , 0.66666667 ,          0 , //e1
      0.66666667 , 0.66666667 ,          0 , //e1
      0.33333333 , 0.33333333 ,    0.14998 , //e1
             0.6 , 0.33333333 ,    0.14998 , //e1
      0.33333333 , 0.66666667 ,    0.14998 , //e1
             0.6 , 0.66666667 ,    0.14998 , //e1
               1 , 0.33333333 , 0.33333333 , //e2
               1 , 0.33333333 ,          1 , //e2
               1 , 0.66666667 , 0.33333333 , //e2
               1 , 0.66666667 ,          1 , //e2
         0.85002 , 0.33333333 ,    0.39999 , //e2
         0.85002 , 0.33333333 , 0.66666667 , //e2
         0.85002 , 0.66666667 ,    0.39999 , //e2
         0.85002 , 0.66666667 , 0.66666667 , //e2
               0 ,          1 , 0.33333333 , //face1
               0 ,          1 , 0.66666667 , //face1
      0.33333333 ,          1 , 0.33333333 , //face1
      0.33333333 ,          1 , 0.48333333 , //face1
               0 , 0.66666667 ,          1 , //face1
               0 , 0.66666667 , 0.66666667 , //face1
               0 , 0.66666667 , 0.33333333 , //face1
      0.33333333 , 0.66666667 , 0.66666667 , //face1
         0.16667 , 0.66666667 ,        0.6 , //face1
         0.16667 , 0.66666667 , 0.33333333 , //face1
               0 , 0.33333333 ,          1 , //face1
               0 , 0.33333333 , 0.66666667 , //face1
               0 , 0.33333333 , 0.33333333 , //face1
      0.33333333 , 0.33333333 , 0.66666667 , //face1
         0.16667 , 0.33333333 ,        0.6 , //face1
         0.16667 , 0.33333333 , 0.33333333 , //face1
               0 ,          0 , 0.33333333 , //face1
               0 ,          0 , 0.66666667 , //face1
      0.33333333 ,          0 , 0.33333333 , //face1
      0.33333333 ,          0 , 0.48333333 , //face1
      0.51666667 ,          0 , 0.66666667 , //face2
      0.66666667 ,          0 , 0.66666667 , //face2
      0.51666667 ,          1 , 0.66666667 , //face2
      0.66666667 ,          1 , 0.66666667 , //face2
         0.49997 , 0.33333333 ,    0.83327 , //face2
      0.66666667 , 0.33333333 ,    0.83327 , //face2
         0.49997 , 0.66666667 ,    0.83327 , //face2
      0.66666667 , 0.66666667 ,    0.83327 , //face2
      0.33333333 ,          0 ,          1 , //face2
      0.66666667 ,          0 ,          1 , //face2
      0.33333333 , 0.33333333 ,          1 , //face2
      0.66666667 , 0.33333333 ,          1 , //face2
      0.33333333 , 0.66666667 ,          1 , //face2
      0.66666667 , 0.66666667 ,          1 , //face2
      0.33333333 ,          1 ,          1 , //face2
      0.66666667 ,          1 ,          1 , //face2
    };

    static const std::vector<std::vector<uint>> polys = {
        {  8,  9,  5,  4, 10, 11,  7,  6},
        { 20, 21, 17, 16, 22, 23, 19, 18}, //edge 2-6
        {  4,  5, 21, 20,  6,  7, 23, 22}, //edge 2-6
        { 21,  5,  1, 17, 23,  7,  3, 19}, //edge 2-6
        { 22, 23, 19, 18,  6,  7,  3,  2}, //edge 2-6
        {  4,  5,  1,  0, 20, 21, 17, 16}, //edge 2-6
        { 29, 25, 24, 28, 31, 27, 26, 30}, //edge 4-8
        {  9, 29, 28,  5, 11, 31, 30,  7}, //edge 4-8
        { 28, 24,  1,  5, 30, 26,  3,  7}, //edge 4-8
        { 31, 27, 26, 30, 11, 15,  3,  7}, //edge 4-8
        {  9, 13,  1,  5, 29, 25, 24, 28}, //edge 4-8
        { 44, 47, 20, 16, 38, 41, 22, 18}, //face 1-2-5-6
        { 43, 46, 47, 44, 37, 40, 41, 38}, //face 1-2-5-6
        { 42, 45, 46, 43, 36, 39, 40, 37}, //face 1-2-5-6
        { 49, 51, 50, 48, 43, 46, 47, 44}, //face 1-2-5-6
        { 37, 40, 41, 38, 33, 35, 34, 32}, //face 1-2-5-6
        { 47, 20, 22, 41, 46, 45, 39, 40}, //face 1-2-5-6
        { 45,  8,  4, 20, 39, 10,  6, 22}, //face 1-2-5-6
        { 40, 39, 22, 41, 35, 10,  6, 34}, //face 1-2-5-6
        { 51,  8,  4, 50, 46, 45, 20, 47}, //face 1-2-5-6
        { 38, 41, 22, 18, 32, 34,  6,  2}, //face 1-2-5-6
        { 16, 20, 47, 44,  0,  4, 50, 48}, //face 1-2-5-6
        { 36, 39, 40, 37, 14, 10, 35, 33}, //face 1-2-5-6
        { 42, 45,  8, 12, 43, 46, 51, 49}, //face 1-2-5-6
        { 62, 63, 57, 56, 64, 65, 59, 58}, //face 1-4-5-8
        { 63, 25, 29, 57, 65, 27, 31, 59}, //face 1-4-5-8
        { 42, 62, 56, 45, 36, 64, 58, 39}, //face 1-4-5-8
        { 64, 65, 59, 58, 66, 67, 55, 54}, //face 1-4-5-8
        { 60, 61, 53, 52, 62, 63, 57, 56}, //face 1-4-5-8
        { 56, 57, 29, 45, 58, 59, 31, 39}, //face 1-4-5-8
        { 45, 29,  9,  8, 39, 31, 11, 10}, //face 1-4-5-8
        { 58, 59, 31, 39, 54, 55, 11, 10}, //face 1-4-5-8
        { 52, 53,  9,  8, 56, 57, 29, 45}, //face 1-4-5-8
        { 36, 64, 58, 39, 14, 66, 54, 10}, //face 1-4-5-8
        { 65, 27, 31, 59, 67, 15, 11, 55}, //face 1-4-5-8
        { 12, 60, 52,  8, 42, 62, 56, 45}, //face 1-4-5-8
        { 61, 13,  9, 53, 63, 25, 29, 57}, //face 1-4-5-8
    };

}


//:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
namespace Corner_4B{

    static const std::vector<double> verts = {
               0 ,          0 ,          0 ,
               1 ,          0 ,          0 ,
               0 ,          1 ,          0 ,
               1 ,          1 ,          0 ,
             0.5 ,          0 ,        0.3 ,
             0.7 ,          0 ,        0.3 ,
             0.5 , 0.66666667 ,        0.3 ,
             0.7 , 0.66666667 ,        0.3 ,
             0.5 ,          0 ,        0.5 ,
             0.7 ,          0 ,        0.5 ,
             0.5 , 0.66666667 ,        0.5 ,
             0.7 , 0.66666667 ,        0.5 ,
               0 ,          0 ,          1 ,
               1 ,          0 ,          1 ,
               0 ,          1 ,          1 ,
               1 ,          1 ,          1 ,
               0 ,        0.5 ,        0.3 ,
               0 ,        0.7 ,        0.3 ,
               0 ,        0.5 ,        0.5 ,
               0 ,        0.7 ,        0.5 ,
             0.3 ,        0.5 ,       0.35 ,
             0.3 ,        0.6 ,       0.35 ,
             0.3 ,        0.5 ,       0.45 ,
             0.3 ,        0.6 ,       0.45 ,
               0 ,          0 , 0.33333333 , //e1_s
      0.33333333 ,          0 , 0.33333333 , //e1_s
               0 , 0.33333333 , 0.33333333 , //e1_s
             0.2 ,        0.3 ,        0.4 , //e1_s
               0 ,          0 , 0.66666667 , //e1_s
      0.33333333 ,          0 , 0.48333333 , //e1_s
               0 , 0.33333333 , 0.48333333 , //e1_s
             0.2 ,        0.3 ,       0.41 , //e1_s
            0.55 ,        0.5 ,        0.7 ,
            0.65 ,        0.5 ,        0.7 ,
            0.55 ,        0.6 ,        0.7 ,
            0.65 ,        0.6 ,        0.7 ,
             0.5 ,        0.5 ,          1 ,
             0.7 ,        0.5 ,          1 ,
             0.5 ,        0.7 ,          1 ,
             0.7 ,        0.7 ,          1 ,
      0.51666667 ,          0 , 0.66666667 , //e2_b
      0.66666667 ,          0 , 0.66666667 , //e2_b
            0.59 ,        0.3 ,        0.8 , //e2_b
             0.6 ,        0.3 ,        0.8 , //e2_b
      0.33333333 ,          0 ,          1 , //e2_b
      0.66666667 ,          0 ,          1 , //e2_b
      0.51666667 , 0.33333333 ,          1 , //e2_b
      0.66666667 , 0.33333333 ,          1 , //e2_b
            0.25 , 0.51666667 ,       0.75 , //e3_dou
            0.33 ,       0.58 ,        0.8 , //e3_dou
            0.25 ,       0.63 ,       0.75 , //e3_dou
            0.33 ,       0.61 ,        0.8 , //e3_dou
               0 , 0.33333333 ,          1 , //e3_dou
      0.33333333 , 0.51666667 ,          1 , //e3_dou
               0 , 0.66666667 ,          1 , //e3_dou
      0.33333333 , 0.66666667 ,          1 , //e3_dou
               0 , 0.51666667 , 0.66666667 , //e3_dou
            0.20 ,       0.58 ,       0.65 , //e3_dou
               0 , 0.66666667 , 0.66666667 , //e3_dou
            0.20 ,       0.61 ,       0.65 , //e3_dou
    };

    static const std::vector<std::vector<uint>> polys = {
        {  8,  9,  5,  4, 10, 11,  7,  6},
        { 10, 11,  7,  6, 14, 15,  3,  2},
        {  9, 13,  1,  5, 11, 15,  3,  7},
        {  4,  5,  1,  0,  6,  7,  3,  2},
        { 18, 22, 20, 16, 19, 23, 21, 17},
        { 16, 20,  4,  0, 17, 21,  6,  2},
        { 22,  8,  4, 20, 23, 10,  6, 21},
        { 19, 23, 21, 17, 14, 10,  6,  2},
        { 28, 29, 25, 24, 30, 31, 27, 26}, //e1_s
        { 29,  8,  4, 25, 31, 22, 20, 27}, //e1_s
        { 30, 31, 27, 26, 18, 22, 20, 16}, //e1_s
        { 24, 25,  4,  0, 26, 27, 20, 16}, //e1_s
        { 12,  8, 29, 28, 18, 22, 31, 30}, //e1_s
        { 36, 37, 33, 32, 38, 39, 35, 34},
        { 38, 39, 35, 34, 14, 15, 11, 10},
        { 37, 13,  9, 33, 39, 15, 11, 35},
        { 32, 33,  9,  8, 34, 35, 11, 10},
        { 44, 45, 41, 40, 46, 47, 43, 42}, //e2_b
        { 46, 47, 43, 42, 36, 37, 33, 32}, //e2_b
        { 45, 13,  9, 41, 47, 37, 33, 43}, //e2_b
        { 40, 41,  9,  8, 42, 43, 33, 32}, //e2_b
        { 12, 44, 40,  8, 36, 46, 42, 32}, //e2_b
        { 52, 53, 49, 48, 54, 55, 51, 50}, //e3_dou
        { 53, 36, 32, 49, 55, 38, 34, 51}, //e3_dou
        { 54, 55, 51, 50, 14, 38, 34, 10}, //e3_dou
        { 12, 36, 32,  8, 52, 53, 49, 48}, //e3_dou
        { 48, 49, 32,  8, 50, 51, 34, 10}, //e3_dou
        { 52, 48, 57, 56, 54, 50, 59, 58}, //e3_dou
        { 56, 57, 22, 18, 58, 59, 23, 19}, //e3_dou
        { 12,  8, 22, 18, 52, 48, 57, 56}, //e3_dou
        { 54, 50, 59, 58, 14, 10, 23, 19}, //e3_dou
        {  8, 22, 57, 48, 10, 23, 59, 50}, //e3_dou
    };

}


//:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
namespace Corner_4CA{

    static const std::vector<double> verts = {
               0 ,          0 ,          0 ,
               1 ,          0 ,          0 ,
               0 ,          1 ,          0 ,
               1 ,          1 ,          0 ,
               0 ,          0 , 0.33333333 , //e1
      0.33333333 ,          0 , 0.33333333 , //e1
             0.5 ,          0 ,        0.3 ,
             0.7 ,          0 ,        0.3 ,
               0 , 0.66666667 , 0.33333333 , //e1
      0.33333333 ,        0.6 , 0.33333333 , //e1
             0.5 , 0.66666667 ,        0.3 ,
             0.7 , 0.66666667 ,        0.3 ,
               0 ,          0 , 0.66666667 , //e1
      0.33333333 ,          0 , 0.48333333 , //e1
             0.5 ,          0 ,        0.5 ,
             0.7 ,          0 ,        0.5 ,
               0 , 0.66666667 , 0.66666667 , //e1
      0.33333333 ,        0.6 , 0.48333333 , //e1
             0.5 , 0.66666667 ,        0.5 ,
             0.7 , 0.66666667 ,        0.5 ,
      0.51666667 ,          0 , 0.66666667 , //e2
      0.66666667 ,          0 , 0.66666667 , //e2
         0.46666 ,        0.3 ,        0.8 , //e2
         0.47777 ,        0.3 ,        0.8 , //e2
      0.33333333 ,          0 ,          1 , //e2
      0.66666667 ,          0 ,          1 , //e2
      0.33333333 , 0.33333333 ,          1 , //e2
      0.48333333 , 0.33333333 ,          1 , //e2
               0 ,          0 ,          1 ,
               1 ,          0 ,          1 ,
               0 ,          1 ,          1 ,
               1 ,          1 ,          1 ,
         0.80002 ,        0.4 ,    0.39999 ,
               1 , 0.33333333 , 0.33333333 ,
         0.80002 ,        0.6 ,    0.39999 ,
               1 , 0.66666667 , 0.33333333 ,
         0.80002 ,        0.4 , 0.66666667 ,
               1 , 0.33333333 ,          1 ,
         0.80002 ,        0.6 , 0.66666667 ,
               1 , 0.66666667 ,          1 ,
             0.5 ,        0.5 ,        0.7 ,
             0.6 ,        0.5 ,        0.7 ,
             0.5 ,        0.6 ,        0.7 ,
             0.6 ,        0.6 ,        0.7 ,
             0.3 ,        0.5 ,          1 ,
             0.5 ,        0.5 ,          1 ,
             0.3 ,        0.7 ,          1 ,
             0.5 ,        0.7 ,          1 ,
      0.66666667 , 0.51666667 ,        0.8 ,
      0.66666667 ,        0.6 ,        0.8 ,
      0.66666667 , 0.51666667 ,          1 ,
      0.66666667 , 0.66666667 ,          1 ,
    };

    static const std::vector<std::vector<uint>> polys = {
        {  6,  7,  1,  0, 10, 11,  3,  2},
        { 14, 15,  7,  6, 18, 19, 11, 10},
        { 18, 19, 11, 10, 30, 31,  3,  2},
        { 12, 13,  5,  4, 16, 17,  9,  8}, //edge 1-2
        { 28, 14, 13, 12, 30, 18, 17, 16}, //edge 1-2
        { 13, 14,  6,  5, 17, 18, 10,  9}, //edge 1-2
        {  4,  5,  6,  0,  8,  9, 10,  2}, //edge 1-2
        { 16, 17,  9,  8, 30, 18, 10,  2}, //edge 1-2
        { 36, 37, 33, 32, 38, 39, 35, 34}, //edge 4-8
        { 32, 33,  1,  7, 34, 35,  3, 11}, //edge 4-8
        { 15, 36, 32,  7, 19, 38, 34, 11}, //edge 4-8
        { 38, 39, 35, 34, 19, 31,  3, 11}, //edge 4-8
        { 15, 29,  1,  7, 36, 37, 33, 32}, //edge 4-8
        { 24, 25, 21, 20, 26, 27, 23, 22}, //t3 1-4-8
        { 44, 45, 41, 40, 46, 47, 43, 42}, //t3 1-4-8
        { 28, 44, 40, 14, 30, 46, 42, 18}, //t3 1-4-8
        { 46, 47, 43, 42, 30, 31, 19, 18}, //t3 1-4-8
        { 40, 41, 15, 14, 42, 43, 19, 18}, //t3 1-4-8
        { 26, 27, 23, 22, 44, 45, 41, 40}, //t3 1-4-8
        { 20, 21, 15, 14, 22, 23, 41, 40}, //t3 1-4-8
        { 25, 29, 15, 21, 27, 45, 41, 23}, //t3 1-4-8
        { 28, 24, 20, 14, 44, 26, 22, 40}, //t3 1-4-8
        { 50, 37, 36, 48, 51, 39, 38, 49}, //t3 1-4-8
        { 48, 36, 15, 41, 49, 38, 19, 43}, //t3 1-4-8
        { 45, 50, 48, 41, 47, 51, 49, 43}, //t3 1-4-8
        { 45, 29, 15, 41, 50, 37, 36, 48}, //t3 1-4-8
        { 51, 39, 38, 49, 47, 31, 19, 43}, //t3 1-4-8
    };

}


//:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
namespace Corner_4CB{

    static const std::vector<double> verts = {
               0 ,          0 ,          0 ,
               1 ,          0 ,          0 ,
               0 ,          1 ,          0 ,
               1 ,          1 ,          0 ,
               0 ,          0 , 0.33333333 , //e1
      0.33333333 ,          0 , 0.33333333 , //e1
             0.5 ,          0 ,        0.3 ,
             0.7 ,          0 ,        0.3 ,
               0 , 0.33333333 , 0.51666667 , //e1
             0.2 , 0.33333333 ,       0.51 , //e1
             0.5 , 0.66666667 ,        0.3 ,
             0.7 , 0.66666667 ,        0.3 ,
               0 ,          0 , 0.66666667 , //e1
      0.33333333 ,          0 , 0.48333333 , //e1
             0.5 ,          0 ,        0.5 ,
             0.7 ,          0 ,        0.5 ,
               0 , 0.33333333 , 0.66666667 , //e1
             0.2 , 0.33333333 ,       0.52 , //e1
             0.5 , 0.66666667 ,        0.5 ,
             0.7 , 0.66666667 ,        0.5 ,
      0.51666667 ,          0 , 0.66666667 , //e2
      0.66666667 ,          0 , 0.66666667 , //e2
      0.51666667 ,    0.55555 , 0.66666667 , //e2
      0.66666667 ,    0.55555 , 0.66666667 , //e2
      0.33333333 ,          0 ,          1 , //e2
      0.66666667 ,          0 ,          1 , //e2
      0.33333333 , 0.66666667 ,          1 , //e2
      0.66666667 , 0.66666667 ,          1 , //e2
               0 ,          0 ,          1 ,
               1 ,          0 ,          1 ,
               0 ,          1 ,          1 ,
               1 ,          1 ,          1 ,
               0 , 0.33333333 ,          0 ,
      0.66666667 , 0.33333333 ,          0 ,
               0 , 0.66666667 ,          0 ,
      0.66666667 , 0.66666667 ,          0 ,
            0.25 , 0.33333333 ,       0.15 ,
         0.55555 , 0.33333333 ,       0.15 ,
            0.25 ,    0.55555 ,       0.15 ,
         0.55555 ,    0.55555 ,       0.15 ,
               0 , 0.51666667 , 0.33333333 ,
             0.2 , 0.51666667 , 0.33333333 ,
               0 , 0.66666667 , 0.33333333 ,
             0.2 ,        0.6 , 0.33333333 ,
               0 ,        0.5 ,        0.5 ,
             0.2 ,       0.55 ,       0.45 ,
               0 ,        0.7 ,        0.5 ,
             0.2 ,       0.65 ,       0.45 ,
               0 ,        0.5 ,        0.7 ,
             0.2 ,       0.55 ,       0.55 ,
               0 ,        0.7 ,        0.7 ,
             0.2 ,       0.65 ,       0.55 ,
    };

    static const std::vector<std::vector<uint>> polys = {
        { 14, 15,  7,  6, 18, 19, 11, 10},
        { 18, 19, 11, 10, 30, 31,  3,  2},
        { 15, 29,  1,  7, 19, 31,  3, 11},
        { 24, 25, 21, 20, 26, 27, 23, 22}, //edge 1-4
        { 26, 27, 23, 22, 30, 31, 19, 18}, //edge 1-4
        { 20, 21, 15, 14, 22, 23, 19, 18}, //edge 1-4
        { 25, 29, 15, 21, 27, 31, 19, 23}, //edge 1-4
        { 28, 24, 20, 14, 30, 26, 22, 18}, //edge 1-4
        { 36, 37, 33, 32, 38, 39, 35, 34}, //edge 2-6
        {  6,  7, 37, 36, 10, 11, 39, 38}, //edge 2-6
        {  6,  7,  1,  0, 36, 37, 33, 32}, //edge 2-6
        { 10, 11, 39, 38,  2,  3, 35, 34}, //edge 2-6
        { 37,  7,  1, 33, 39, 11,  3, 35}, //edge 2-6
        { 40, 41, 36, 32, 42, 43, 38, 34}, //t3 1-2-6
        { 12, 13,  5,  4, 16, 17,  9,  8}, //t3 1-2-6
        { 48, 49, 45, 44, 50, 51, 47, 46}, //t3 1-2-6
        { 28, 14, 49, 48, 30, 18, 51, 50}, //t3 1-2-6
        { 50, 51, 47, 46, 30, 18, 10,  2}, //t3 1-2-6
        { 49, 14,  6, 45, 51, 18, 10, 47}, //t3 1-2-6
        { 44, 45, 41, 40, 46, 47, 43, 42}, //t3 1-2-6
        { 16, 17,  9,  8, 48, 49, 45, 44}, //t3 1-2-6
        { 44, 45,  6,  0, 40, 41, 36, 32}, //t3 1-2-6
        {  2, 10, 47, 46, 34, 38, 43, 42}, //t3 1-2-6
        {  4,  5,  6,  0,  8,  9, 45, 44}, //t3 1-2-6
        { 28, 14, 13, 12, 48, 49, 17, 16}, //t3 1-2-6
        { 13, 14,  6,  5, 17, 49, 45,  9}, //t3 1-2-6
        { 41, 45,  6, 36, 43, 47, 10, 38}, //t3 1-2-6
    };
}


//:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
namespace Corner_5A{

    static const std::vector<double> verts = {
               0 ,          0 ,          0 ,
               1 ,          0 ,          0 ,
               0 ,          1 ,          0 ,
               1 ,          1 ,          0 ,
             0.4 ,        0.4 ,        0.4 ,
             0.6 ,        0.4 ,        0.4 ,
             0.4 ,        0.6 ,        0.4 ,
             0.6 ,        0.6 ,        0.4 ,
             0.4 ,        0.4 ,        0.6 ,
             0.6 ,        0.4 ,        0.6 ,
             0.4 ,        0.6 ,        0.6 ,
             0.6 ,        0.6 ,        0.6 ,
               0 ,          0 ,          1 ,
               1 ,          0 ,          1 ,
               0 ,          1 ,          1 ,
               1 ,          1 ,          1 ,
      0.33333333 ,          0 ,          0 , //face
      0.66666667 ,          0 ,          0 , //face
            0.45 ,        0.3 ,        0.3 , //face
            0.55 ,        0.3 ,        0.3 , //face
               0 ,          0 , 0.33333333 , //face
      0.33333333 ,          0 , 0.33333333 , //face
      0.66666667 ,          0 , 0.33333333 , //face
               1 ,          0 , 0.33333333 , //face
             0.3 ,        0.3 ,       0.45 , //face
            0.45 ,        0.1 ,       0.45 , //face
            0.55 ,        0.1 ,       0.45 , //face
             0.7 ,        0.3 ,       0.45 , //face
               0 ,          0 , 0.66666667 , //face
      0.33333333 ,          0 , 0.66666667 , //face
      0.66666667 ,          0 , 0.66666667 , //face
               1 ,          0 , 0.66666667 , //face
             0.3 ,        0.3 ,       0.55 , //face
            0.45 ,        0.1 ,       0.55 , //face
            0.55 ,        0.1 ,       0.55 , //face
             0.7 ,        0.3 ,       0.55 , //face
      0.33333333 ,          0 ,          1 , //face
      0.66666667 ,          0 ,          1 , //face
            0.45 ,        0.3 ,        0.7 , //face
            0.55 ,        0.3 ,        0.7 , //face
      0.33333333 , 0.66666667 ,          0 , //edge_front
      0.66666667 , 0.66666667 ,          0 , //edge_front
             0.4 ,        0.6 ,       0.25 , //edge_front
             0.6 ,        0.6 ,       0.25 , //edge_front
             0.8 ,        0.6 ,        0.4 , //edge_right
               1 , 0.66666667 , 0.33333333 , //edge_right
             0.8 ,        0.6 ,        0.6 , //edge_right
               1 , 0.66666667 , 0.66666667 , //edge_right
             0.5 ,        0.5 ,        0.8 , //t3
             0.6 ,        0.5 ,        0.8 , //t3
             0.5 ,        0.6 ,        0.8 , //t3
             0.6 ,        0.6 ,        0.8 , //t3
             0.5 ,        0.5 ,          1 , //t3
             0.7 ,        0.5 ,          1 , //t3
             0.5 ,        0.7 ,          1 , //t3
             0.7 ,        0.7 ,          1 , //t3
             0.5 , 0.33333333 ,        0.8 , //t3
            0.52 , 0.33333333 ,        0.8 , //t3
      0.51666667 , 0.33333333 ,          1 , //t3
      0.66666667 , 0.33333333 ,          1 , //t3
             0.2 , 0.51666667 ,       0.80 , //t3
      0.33333333 ,       0.54 ,       0.85 , //t3
             0.2 ,        0.6 ,       0.80 , //t3
      0.33333333 ,        0.6 ,       0.85 , //t3
               0 , 0.33333333 ,          1 , //t3
      0.33333333 , 0.51666667 ,          1 , //t3
               0 , 0.66666667 ,          1 , //t3
      0.33333333 , 0.66666667 ,          1 , //t3
               0 ,        0.5 ,        0.3 , //t3
             0.2 ,        0.5 ,        0.4 , //t3
               0 ,        0.7 ,        0.3 , //t3
             0.2 ,        0.6 ,        0.4 , //t3
               0 ,        0.5 ,        0.5 , //t3
             0.2 ,        0.5 ,        0.5 , //t3
               0 ,        0.7 ,        0.5 , //t3
             0.2 ,        0.6 ,        0.5 , //t3
               0 , 0.33333333 , 0.33333333 , //t3
             0.2 , 0.33333333 ,       0.46 , //t3
               0 , 0.33333333 , 0.48333333 , //t3
             0.2 , 0.33333333 ,       0.47 , //t3
               0 , 0.51666667 , 0.66666667 , //t3
            0.15 ,       0.54 , 0.66666667 , //t3
               0 , 0.66666667 , 0.66666667 , //t3
            0.15 ,        0.6 , 0.66666667 , //t3
    };

    static const std::vector<std::vector<uint>> polys = {
        {  8,  9,  5,  4, 10, 11,  7,  6},
        { 10, 11,  7,  6, 14, 15,  3,  2}, //up
        { 21, 22, 17, 16, 25, 26, 19, 18}, //face
        { 29, 30, 22, 21, 33, 34, 26, 25}, //face
        { 36, 37, 30, 29, 38, 39, 34, 33}, //face
        { 22, 23,  1, 17, 26, 27,  5, 19}, //face
        { 20, 21, 16,  0, 24, 25, 18,  4}, //face
        { 33, 34, 26, 25, 32, 35, 27, 24}, //face
        { 28, 29, 21, 20, 32, 33, 25, 24}, //face
        { 30, 31, 23, 22, 34, 35, 27, 26}, //face
        { 12, 36, 29, 28,  8, 38, 33, 32}, //face
        { 37, 13, 31, 30, 39,  9, 35, 34}, //face
        { 25, 26, 19, 18, 24, 27,  5,  4}, //face
        { 38, 39, 34, 33,  8,  9, 35, 32}, //face
        { 32, 35, 27, 24,  8,  9,  5,  4}, //face
        { 18, 19, 17, 16, 42, 43, 41, 40}, //edge_front
        { 42, 43, 41, 40,  6,  7,  3,  2}, //edge_front
        {  4,  5, 19, 18,  6,  7, 43, 42}, //edge_front
        { 19,  5,  1, 17, 43,  7,  3, 41}, //edge_front
        {  4, 18, 16,  0,  6, 42, 40,  2}, //edge_front
        { 35, 31, 23, 27, 46, 47, 45, 44}, //edge_right
        { 46, 47, 45, 44, 11, 15,  3,  7}, //edge_right
        {  9, 13, 31, 35, 11, 15, 47, 46}, //edge_right
        { 27, 23,  1,  5, 44, 45,  3,  7}, //edge_right
        {  9, 35, 27,  5, 11, 46, 44,  7}, //edge_right
        { 52, 53, 49, 48, 54, 55, 51, 50}, //t3
        { 36, 37, 39, 38, 58, 59, 57, 56}, //t3
        { 64, 65, 61, 60, 66, 67, 63, 62}, //t3
        { 58, 59, 57, 56, 52, 53, 49, 48}, //t3
        { 48, 49,  9,  8, 50, 51, 11, 10}, //t3
        { 56, 57, 39, 38, 48, 49,  9,  8}, //t3
        { 53, 13,  9, 49, 55, 15, 11, 51}, //t3
        { 54, 55, 51, 50, 14, 15, 11, 10}, //t3
        { 37, 13,  9, 39, 59, 53, 49, 57}, //t3
        { 12, 36, 38,  8, 52, 58, 56, 48}, //t3
        { 65, 52, 48, 61, 67, 54, 50, 63}, //t3
        { 60, 61, 48,  8, 62, 63, 50, 10}, //t3
        { 66, 67, 63, 62, 14, 54, 50, 10}, //t3
        { 12, 52, 48,  8, 64, 65, 61, 60}, //t3
        { 72, 73, 69, 68, 74, 75, 71, 70}, //t3
        { 28, 32, 24, 20, 78, 79, 77, 76}, //t3
        { 64, 60, 81, 80, 66, 62, 83, 82}, //t3
        { 68, 69,  4,  0, 70, 71,  6,  2}, //t3
        { 74, 75, 71, 70, 14, 10,  6,  2}, //t3
        { 73,  8,  4, 69, 75, 10,  6, 71}, //t3
        { 80, 81, 73, 72, 82, 83, 75, 74}, //t3
        { 20, 24,  4,  0, 76, 77, 69, 68}, //t3
        { 78, 79, 77, 76, 72, 73, 69, 68}, //t3
        { 79, 32, 24, 77, 73,  8,  4, 69}, //t3
        { 81, 60,  8, 73, 83, 62, 10, 75}, //t3
        { 12,  8, 32, 28, 72, 73, 79, 78}, //t3
        { 64, 60,  8, 12, 80, 81, 73, 72}, //t3
        { 66, 62, 83, 82, 14, 10, 75, 74}, //t3
    };

}


//:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
namespace Corner_7A{

    static const std::vector<double> verts = {
               0 ,          0 ,          0 ,
               1 ,          0 ,          0 ,
               0 ,          1 ,          0 ,
               1 ,          1 ,          0 ,
             0.4 ,        0.4 ,        0.4 ,
             0.6 ,        0.4 ,        0.4 ,
             0.4 ,        0.6 ,        0.4 ,
             0.6 ,        0.6 ,        0.4 ,
             0.4 ,        0.4 ,        0.6 ,
             0.6 ,        0.4 ,        0.6 ,
             0.4 ,        0.6 ,        0.6 ,
             0.6 ,        0.6 ,        0.6 ,
               0 ,          0 ,          1 ,
               1 ,          0 ,          1 ,
               0 ,          1 ,          1 ,
               1 ,          1 ,          1 ,
      0.33333333 ,          0 ,          0 , //face_bottom
      0.66666667 ,          0 ,          0 , //face_bottom
            0.45 ,        0.3 ,        0.3 , //face_bottom
            0.55 ,        0.3 ,        0.3 , //face_bottom
               0 ,          0 , 0.33333333 , //face_bottom
      0.33333333 ,          0 , 0.33333333 , //face_bottom
      0.66666667 ,          0 , 0.33333333 , //face_bottom
               1 ,          0 , 0.33333333 , //face_bottom
             0.3 ,        0.3 ,       0.45 , //face_bottom
            0.45 ,        0.1 ,       0.45 , //face_bottom
            0.55 ,        0.1 ,       0.45 , //face_bottom
             0.7 ,        0.3 ,       0.45 , //face_bottom
               0 ,          0 , 0.66666667 , //face_bottom
      0.33333333 ,          0 , 0.66666667 , //face_bottom
      0.66666667 ,          0 , 0.66666667 , //face_bottom
               1 ,          0 , 0.66666667 , //face_bottom
             0.3 ,        0.3 ,       0.55 , //face_bottom
            0.45 ,        0.1 ,       0.55 , //face_bottom
            0.55 ,        0.1 ,       0.55 , //face_bottom
             0.7 ,        0.3 ,       0.55 , //face_bottom
      0.33333333 ,          0 ,          1 , //face_bottom
      0.66666667 ,          0 ,          1 , //face_bottom
            0.45 ,        0.3 ,        0.7 , //face_bottom
            0.55 ,        0.3 ,        0.7 , //face_bottom
            0.45 ,        0.7 ,        0.7 , //face_back
            0.55 ,        0.7 ,        0.7 , //face_back
             0.3 ,       0.45 ,        0.7 , //face_back
            0.45 ,       0.45 ,       0.85 , //face_back
            0.55 ,       0.45 ,       0.85 , //face_back
             0.7 ,       0.45 ,        0.7 , //face_back
             0.3 ,       0.55 ,        0.7 , //face_back
            0.45 ,       0.55 ,       0.85 , //face_back
            0.55 ,       0.55 ,       0.85 , //face_back
             0.7 ,       0.55 ,        0.7 , //face_back
               0 , 0.33333333 ,          1 , //face_back
      0.33333333 , 0.33333333 ,          1 , //face_back
      0.66666667 , 0.33333333 ,          1 , //face_back
               1 , 0.33333333 ,          1 , //face_back
               0 , 0.66666667 ,          1 , //face_back
      0.33333333 , 0.66666667 ,          1 , //face_back
      0.66666667 , 0.66666667 ,          1 , //face_back
               1 , 0.66666667 ,          1 , //face_back
      0.33333333 ,          1 ,          1 , //face_back
      0.66666667 ,          1 ,          1 , //face_back
               0 , 0.33333333 ,          0 , //face_left
             0.3 ,       0.45 ,        0.3 , //face_left
               0 , 0.66666667 ,          0 , //face_left
             0.3 ,       0.55 ,        0.3 , //face_left
               0 , 0.33333333 , 0.33333333 , //face_left
            0.15 ,       0.45 ,       0.45 , //face_left
               0 , 0.66666667 , 0.33333333 , //face_left
            0.15 ,       0.55 ,       0.45 , //face_left
               0 ,          1 , 0.33333333 , //face_left
             0.3 ,        0.7 ,       0.45 , //face_left
               0 , 0.33333333 , 0.66666667 , //face_left
            0.15 ,       0.45 ,       0.55 , //face_left
               0 , 0.66666667 , 0.66666667 , //face_left
            0.15 ,       0.55 ,       0.55 , //face_left
               0 ,          1 , 0.66666667 , //face_left
             0.3 ,        0.7 ,       0.55 , //face_left
             0.5 ,        0.5 ,          0 , //t3_front
             0.7 ,        0.5 ,          0 , //t3_front
             0.5 ,        0.7 ,          0 , //t3_front
             0.7 ,        0.7 ,          0 , //t3_front
            0.53 ,       0.55 ,        0.2 , //t3_front
            0.55 ,       0.55 ,        0.2 , //t3_front
            0.53 ,       0.60 ,        0.2 , //t3_front
            0.55 ,       0.60 ,        0.2 , //t3_front
      0.51666667 , 0.33333333 ,          0 , //t3_front
      0.66666667 , 0.33333333 ,          0 , //t3_front
      0.33333333 , 0.51666667 ,          0 , //t3_front
      0.33333333 , 0.66666667 ,          0 , //t3_front
      0.51666667 , 0.33333333 ,        0.2 , //t3_front
         0.55555 , 0.33333333 ,        0.2 , //t3_front
      0.33333333 , 0.51666667 ,        0.2 , //t3_front
      0.33333333 ,    0.55555 ,        0.2 , //t3_front
            0.55 ,        0.8 ,       0.41 , //t3_up
            0.59 ,        0.8 ,       0.41 , //t3_up
             0.5 ,          1 ,        0.3 , //t3_up
             0.7 ,          1 ,        0.3 , //t3_up
            0.55 ,        0.8 ,       0.51 , //t3_up
            0.59 ,        0.8 ,       0.51 , //t3_up
             0.5 ,          1 ,        0.5 , //t3_up
             0.7 ,          1 ,        0.5 , //t3_up
             0.4 ,        0.8 ,       0.46 , //t3_up
      0.33333333 ,          1 , 0.33333333 , //t3_up
             0.4 ,        0.8 ,       0.50 , //t3_up
      0.33333333 ,          1 , 0.48333333 , //t3_up
            0.53 ,        0.8 ,        0.6 , //t3_up
            0.57 ,        0.8 ,        0.6 , //t3_up
      0.51666667 ,          1 , 0.66666667 , //t3_up
      0.66666667 ,          1 , 0.66666667 , //t3_up
             0.8 ,       0.45 ,       0.45 , //t3_right
               1 ,        0.5 ,        0.3 , //t3_right
             0.8 ,       0.55 ,       0.45 , //t3_right
               1 ,        0.7 ,        0.3 , //t3_right
             0.8 ,       0.45 ,       0.48 , //t3_right
               1 ,        0.5 ,        0.5 , //t3_right
             0.8 ,       0.55 ,       0.48 , //t3_right
               1 ,        0.7 ,        0.5 , //t3_right
             0.8 ,        0.35,       0.46 , //t3_right
               1 , 0.33333333 , 0.33333333 , //t3_right
             0.8 ,        0.35,       0.48 , //t3_right
               1 , 0.33333333 , 0.48333333 , //t3_right
             0.8 ,       0.53 ,       0.65 , //t3_right
               1 , 0.51666667 , 0.66666667 , //t3_right
             0.8 ,       0.56 ,       0.65 , //t3_right
               1 , 0.66666667 , 0.66666667 , //t3_right
    };

    static const std::vector<std::vector<uint>> polys = {
        {  8,  9,  5,  4, 10, 11,  7,  6},
        { 21, 22, 17, 16, 25, 26, 19, 18}, //face_bottom
        { 29, 30, 22, 21, 33, 34, 26, 25}, //face_bottom
        { 36, 37, 30, 29, 38, 39, 34, 33}, //face_bottom
        { 22, 23,  1, 17, 26, 27,  5, 19}, //face_bottom
        { 20, 21, 16,  0, 24, 25, 18,  4}, //face_bottom
        { 33, 34, 26, 25, 32, 35, 27, 24}, //face_bottom
        { 28, 29, 21, 20, 32, 33, 25, 24}, //face_bottom
        { 30, 31, 23, 22, 34, 35, 27, 26}, //face_bottom
        { 12, 36, 29, 28,  8, 38, 33, 32}, //face_bottom
        { 37, 13, 31, 30, 39,  9, 35, 34}, //face_bottom
        { 25, 26, 19, 18, 24, 27,  5,  4}, //face_bottom
        { 38, 39, 34, 33,  8,  9, 35, 32}, //face_bottom
        { 32, 35, 27, 24,  8,  9,  5,  4}, //face_bottom
        { 51, 52, 44, 43, 55, 56, 48, 47}, //face_back
        { 50, 51, 43, 42, 54, 55, 47, 46}, //face_back
        { 52, 53, 45, 44, 56, 57, 49, 48}, //face_back
        { 55, 56, 48, 47, 58, 59, 41, 40}, //face_back
        { 36, 37, 39, 38, 51, 52, 44, 43}, //face_back
        { 43, 44, 39, 38, 47, 48, 41, 40}, //face_back
        { 44, 45,  9, 39, 48, 49, 11, 41}, //face_back
        { 42, 43, 38,  8, 46, 47, 40, 10}, //face_back
        { 38, 39,  9,  8, 40, 41, 11, 10}, //face_back
        { 37, 13,  9, 39, 52, 53, 45, 44}, //face_back
        { 56, 57, 49, 48, 59, 15, 11, 41}, //face_back
        { 12, 36, 38,  8, 50, 51, 43, 42}, //face_back
        { 54, 55, 47, 46, 14, 58, 40, 10}, //face_back
        { 70, 71, 65, 64, 72, 73, 67, 66}, //face_left
        { 28, 32, 24, 20, 70, 71, 65, 64}, //face_left
        { 72, 73, 67, 66, 74, 75, 69, 68}, //face_left
        { 64, 65, 61, 60, 66, 67, 63, 62}, //face_left
        { 50, 42, 71, 70, 54, 46, 73, 72}, //face_left
        { 71, 42, 61, 65, 73, 46, 63, 67}, //face_left
        { 54, 46, 73, 72, 14, 10, 75, 74}, //face_left
        { 66, 67, 63, 62, 68, 69,  6,  2}, //face_left
        { 12,  8, 32, 28, 50, 42, 71, 70}, //face_left
        { 20, 24,  4,  0, 64, 65, 61, 60}, //face_left
        { 46, 42, 61, 63, 10,  8,  4,  6}, //face_left
        { 73, 46, 63, 67, 75, 10,  6, 69}, //face_left
        { 32,  8,  4, 24, 71, 42, 61, 65}, //face_left
        { 80, 81, 77, 76, 82, 83, 79, 78}, //t3_front
        { 61, 90, 86, 60, 63, 91, 87, 62}, //t3_front
        { 18, 19, 17, 16, 88, 89, 85, 84}, //t3_front
        { 90, 80, 76, 86, 91, 82, 78, 87}, //t3_front
        { 88, 89, 85, 84, 80, 81, 77, 76}, //t3_front
        { 63, 91, 87, 62,  6, 82, 78,  2}, //t3_front
        {  4,  5, 81, 80,  6,  7, 83, 82}, //t3_front
        { 82, 83, 79, 78,  6,  7,  3,  2}, //t3_front
        { 81,  5,  1, 77, 83,  7,  3, 79}, //t3_front
        { 18, 19, 89, 88,  4,  5, 81, 80}, //t3_front
        { 61,  4, 80, 90, 63,  6, 82, 91}, //t3_front
        { 18, 88, 84, 16,  4, 80, 76,  0}, //t3_front
        {  4, 80, 76,  0, 61, 90, 86, 60}, //t3_front
        { 89, 19, 17, 85, 81,  5,  1, 77}, //t3_front
        {  96,  97,  93,  92,  98,  99,  95,  94}, //t3_up
        {  75, 102, 100,  69,  74, 103, 101,  68}, //t3_up
        {  40,  41, 105, 104,  58,  59, 107, 106}, //t3_up
        { 102,  96,  92, 100, 103,  98,  94, 101}, //t3_up
        { 104, 105,  97,  96, 106, 107,  99,  98}, //t3_up
        {  10,  11,   7,   6,  96,  97,  93,  92}, //t3_up
        {  11,  15,   3,   7,  97,  99,  95,  93}, //t3_up
        {  92,  93,   7,   6,  94,  95,   3,   2}, //t3_up
        {  69, 100,  92,   6,  68, 101,  94,   2}, //t3_up
        {  10,  96, 102,  75,  14,  98, 103,  74}, //t3_up
        {  41,  11,  97, 105,  59,  15,  99, 107}, //t3_up
        {  10,  40, 104,  96,  14,  58, 106,  98}, //t3_up
        {  40,  41,  11,  10, 104, 105,  97,  96}, //t3_up
        {  75,  10,   6,  69, 102,  96,  92, 100}, //t3_up
        { 112, 113, 109, 108, 114, 115, 111, 110}, //t3_right
        {  35,  31,  23,  27, 118, 119, 117, 116}, //t3_right
        {  45,  53, 121, 120,  49,  57, 123, 122}, //t3_right
        { 114, 115, 111, 110,  11,  15,   3,   7}, //t3_right
        { 108, 109,   1,   5, 110, 111,   3,   7}, //t3_right
        {   9, 112, 108,   5,  11, 114, 110,   7}, //t3_right
        {  35, 118, 116,  27,   9, 112, 108,   5}, //t3_right
        {  45, 120, 112,   9,  49, 122, 114,  11}, //t3_right
        {  49,  57, 123, 122,  11,  15, 115, 114}, //t3_right
        { 118, 119, 117, 116, 112, 113, 109, 108}, //t3_right
        { 120, 121, 113, 112, 122, 123, 115, 114}, //t3_right
        {  27,  23,   1,   5, 116, 117, 109, 108}, //t3_right
        {   9,  13,  31,  35, 112, 113, 119, 118}, //t3_right
        {   9,  13, 113, 112,  45,  53, 121, 120}, //t3_right
    };

}


}


#endif // HEX_TRANSITION_SCHEMES_3REF_H
